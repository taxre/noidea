class WordsController < ApplicationController
  before_action :set_word, only: [:show, :edit, :update, :destroy]

def live_search
     @content = render_to_string(:partial => 'display', :collection => @classifieds)
 
  render :update do |page|
    page.replace_html 'content', @content
  end
end


def search
@words = Word.find(:all, :conditions => ["word LIKE ?", "%#{params[:key]}%"])
end

  # GET /words
  # GET /words.json
  def index
    @words = Word.all
  end

  # GET /words/1
  # GET /words/1.json
  def show
  end

  # GET /words/new
  def new
    @word = Word.new
  end

  # GET /words/1/edit

  # POST /words
  # POST /words.json
  def create
    @word = Word.new(word_params)

    respond_to do |format|
      if @word.save
        format.html { redirect_to @word, notice: 'Word was successfully created.' }
        format.json { render action: 'show', status: :created, location: @word }
      else
        format.html { render action: 'new' }
        format.json { render json: @word.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /words/1
  # PATCH/PUT /words/1.json
 

  # DELETE /words/1
  # DELETE /words/1.json

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_word
      @word = Word.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def word_params
      params.require(:word).permit(:word, :wordtype, :description)
    end



end
